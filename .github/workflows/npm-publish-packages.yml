# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Publish Package to npmjs
on:
  workflow_dispatch:
    inputs:
      release-type:
        description: "Release type (one of): patch, minor, major, prepatch, preminor, premajor, prerelease"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - prepatch
          - preminor
          - premajor
          - prerelease
      pre-type:
        description: "Pre-release type (one of): beta, alpha"
        required: true
        default: "alpha"
        type: choice
        options:
          - beta
          - alpha
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"
          # Defaults to the user or organization that owns the workflow file
          scope: "@octocat"

      # Install Dependencies
      - name: Install Dependencies
        run: yarn && yarn prepare

      # Build Packages
      - name: Build Packages
        run: yarn build

      # Configure Git
      - name: Git configuration
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      # Bump package version
      # Use tag latest
      - name: Bump release version
        if: startsWith(github.event.inputs.release-type, 'pre') != true
        run: |
          echo "NEW_VERSION=$(yarn --no-git-tag-version version --new-version $RELEASE_TYPE -v)" >> $GITHUB_ENV
          echo "RELEASE_TAG=latest" >> $GITHUB_ENV
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}
          PRE_RELEASE_TYPE: ${{ github.event.inputs.pre-type }}

      # Bump package pre-release version
      # Use tag beta for pre-release versions
      - name: Bump pre-release version
        if: startsWith(github.event.inputs.release-type, 'pre')
        run: |
          echo "NEW_VERSION=$(npm --no-git-tag-version version --new-version $RELEASE_TYPE --preid $PRE_RELEASE_TYPE | grep "New version:" | grep -oe "[0-9].*")" >> $GITHUB_ENV
          echo "RELEASE_TAG=$PRE_RELEASE_TYPE" >> $GITHUB_ENV
          echo ${{ env.NEW_VERSION }}
        env:
          RELEASE_TYPE: ${{ github.event.inputs.release-type }}
          PRE_RELEASE_TYPE: ${{ github.event.inputs.pre-type }}

      # Publish
      - name: Publish NPM Packages
        run: yarn publish --verbose --access public --tag ${{ env.RELEASE_TAG }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Push repository changes
      - name: Push changes to repository
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.PAT_TOKEN }}
          branch: ${{ github.ref }}
